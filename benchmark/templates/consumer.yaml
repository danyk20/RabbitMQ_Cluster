apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.consumer.name }}
spec:
  completions: {{ .Values.consumer.instances.total }}
  parallelism: {{ .Values.consumer.instances.parallel }}
  template:
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: job-name
                      operator: In
                      values:
                        - {{ .Values.consumer.name }}
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: benchmark-consumer
          image: gitlab-registry.cern.ch/cmsos/k8sbox/rabbitmq/cmsos-x86_64-rabbitmq:{{ .Values.consumer.version }}
          env:
            - name: BROKER_IP
              value: "{{ .Values.broker }}"
            - name: MQTT_PORT
              value: "{{ .Values.port }}"
          volumeMounts:
            - mountPath: /data
              name: data-volume
          command: [
            "/bin/sh", "-c",
            "curl --retry-connrefused --retry {{ .Values.consumer.init_timeout }} --retry-delay 1 -u '{{ .Values.rabbitmq.username }}:{{ .Values.rabbitmq.password }}' 'http://rabbit-cluster:15672/api/nodes' && /opt/benchmark/bin/consumer {{ .Values.consumer.flags }}"
          ]
      volumes:
        - name: data-volume
          hostPath:
            path: {{ .Values.consumer.path }}
      restartPolicy: Never
